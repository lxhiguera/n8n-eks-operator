# GitHub Actions workflow for E2E tests
# Copy this file to .github/workflows/e2e.yml in your repository root

name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run E2E tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_pattern:
        description: 'Test pattern to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - lifecycle
          - custom
          - error
          - monitoring
      use_real_cluster:
        description: 'Use real cluster instead of envtest'
        required: false
        default: false
        type: boolean
      timeout:
        description: 'Test timeout (e.g., 30m, 1h)'
        required: false
        default: '30m'

env:
  GO_VERSION: '1.19'
  KUBECONFIG: /tmp/kubeconfig

jobs:
  e2e-envtest:
    name: E2E Tests (EnvTest)
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
            
      - name: Install dependencies
        run: |
          go mod download
          go install sigs.k8s.io/controller-runtime/tools/setup-envtest@latest
          
      - name: Setup envtest
        run: |
          setup-envtest use 1.28.x --bin-dir /usr/local/bin
          
      - name: Run E2E tests with envtest
        working-directory: test/e2e
        env:
          RUN_E2E_TESTS: true
          USE_REAL_CLUSTER: false
          TEST_TIMEOUT: ${{ github.event.inputs.timeout || '30m' }}
          VERBOSE_LOGGING: true
        run: |
          pattern="${{ github.event.inputs.test_pattern || 'all' }}"
          ./run-tests.sh --verbose --coverage "$pattern"
          
      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-coverage-envtest
          path: |
            test/e2e/coverage.out
            test/e2e/coverage.html
          retention-days: 7
          
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-results-envtest
          path: test/e2e/e2e-results.json
          retention-days: 7

  e2e-kind:
    name: E2E Tests (Kind)
    runs-on: ubuntu-latest
    timeout-minutes: 60
    if: github.event.inputs.use_real_cluster == 'true' || github.event_name == 'schedule'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          
      - name: Setup Kind
        uses: helm/kind-action@v1.8.0
        with:
          version: v0.20.0
          kubectl_version: v1.28.0
          cluster_name: n8n-e2e
          config: |
            kind: Cluster
            apiVersion: kind.x-k8s.io/v1alpha4
            nodes:
            - role: control-plane
              image: kindest/node:v1.28.0
              extraMounts:
              - hostPath: /tmp
                containerPath: /tmp
            - role: worker
              image: kindest/node:v1.28.0
            - role: worker
              image: kindest/node:v1.28.0
              
      - name: Build and load operator image
        run: |
          make docker-build IMG=n8n-eks-operator:e2e
          kind load docker-image n8n-eks-operator:e2e --name n8n-e2e
          
      - name: Deploy operator
        run: |
          make deploy IMG=n8n-eks-operator:e2e
          kubectl wait --for=condition=available --timeout=300s deployment/n8n-eks-operator-controller-manager -n n8n-system
          
      - name: Run E2E tests on Kind
        working-directory: test/e2e
        env:
          RUN_E2E_TESTS: true
          USE_REAL_CLUSTER: true
          TEST_TIMEOUT: ${{ github.event.inputs.timeout || '45m' }}
          VERBOSE_LOGGING: true
          OPERATOR_IMAGE: n8n-eks-operator:e2e
        run: |
          pattern="${{ github.event.inputs.test_pattern || 'all' }}"
          ./run-tests.sh --real-cluster --verbose --coverage "$pattern"
          
      - name: Collect logs on failure
        if: failure()
        run: |
          echo "=== Operator Logs ==="
          kubectl logs -l app.kubernetes.io/name=n8n-eks-operator -n n8n-system --tail=100 || true
          echo "=== Test Resources ==="
          kubectl get all -l test-suite=n8n-e2e --all-namespaces || true
          echo "=== Events ==="
          kubectl get events --all-namespaces --sort-by='.lastTimestamp' || true
          
      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-coverage-kind
          path: |
            test/e2e/coverage.out
            test/e2e/coverage.html
          retention-days: 7
          
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-results-kind
          path: test/e2e/e2e-results.json
          retention-days: 7

  e2e-aws:
    name: E2E Tests (AWS EKS)
    runs-on: ubuntu-latest
    timeout-minutes: 90
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.use_real_cluster == 'true')
    environment: aws-testing
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'
          
      - name: Connect to EKS cluster
        run: |
          aws eks update-kubeconfig --region us-west-2 --name ${{ secrets.EKS_CLUSTER_NAME }}
          kubectl cluster-info
          
      - name: Build and push operator image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          IMAGE_TAG: e2e-${{ github.sha }}
        run: |
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin $ECR_REGISTRY
          make docker-build docker-push IMG=$ECR_REGISTRY/n8n-eks-operator:$IMAGE_TAG
          
      - name: Deploy operator
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          IMAGE_TAG: e2e-${{ github.sha }}
        run: |
          make deploy IMG=$ECR_REGISTRY/n8n-eks-operator:$IMAGE_TAG
          kubectl wait --for=condition=available --timeout=600s deployment/n8n-eks-operator-controller-manager -n n8n-system
          
      - name: Run E2E tests on EKS
        working-directory: test/e2e
        env:
          RUN_E2E_TESTS: true
          USE_REAL_CLUSTER: true
          TEST_TIMEOUT: ${{ github.event.inputs.timeout || '60m' }}
          VERBOSE_LOGGING: true
          AWS_REGION: us-west-2
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          IMAGE_TAG: e2e-${{ github.sha }}
        run: |
          pattern="${{ github.event.inputs.test_pattern || 'all' }}"
          ./run-tests.sh --real-cluster --verbose --coverage "$pattern"
          
      - name: Collect logs on failure
        if: failure()
        run: |
          echo "=== Operator Logs ==="
          kubectl logs -l app.kubernetes.io/name=n8n-eks-operator -n n8n-system --tail=200 || true
          echo "=== Test Resources ==="
          kubectl get all -l test-suite=n8n-e2e --all-namespaces || true
          echo "=== N8nInstance Status ==="
          kubectl get n8ninstances -l test-suite=n8n-e2e --all-namespaces -o yaml || true
          echo "=== Events ==="
          kubectl get events --all-namespaces --sort-by='.lastTimestamp' --field-selector type=Warning || true
          
      - name: Cleanup operator
        if: always()
        run: |
          make undeploy || true
          
      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-coverage-eks
          path: |
            test/e2e/coverage.out
            test/e2e/coverage.html
          retention-days: 7
          
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-results-eks
          path: test/e2e/e2e-results.json
          retention-days: 7

  report:
    name: Test Report
    runs-on: ubuntu-latest
    needs: [e2e-envtest, e2e-kind]
    if: always()
    
    steps:
      - name: Download test results
        uses: actions/download-artifact@v3
        with:
          path: test-results
          
      - name: Generate test report
        run: |
          echo "# E2E Test Results" > test-report.md
          echo "" >> test-report.md
          echo "## Summary" >> test-report.md
          echo "" >> test-report.md
          
          if [ -f "test-results/e2e-results-envtest/e2e-results.json" ]; then
            echo "### EnvTest Results" >> test-report.md
            echo "âœ… EnvTest execution completed" >> test-report.md
            echo "" >> test-report.md
          fi
          
          if [ -f "test-results/e2e-results-kind/e2e-results.json" ]; then
            echo "### Kind Results" >> test-report.md
            echo "âœ… Kind execution completed" >> test-report.md
            echo "" >> test-report.md
          fi
          
          if [ -f "test-results/e2e-results-eks/e2e-results.json" ]; then
            echo "### EKS Results" >> test-report.md
            echo "âœ… EKS execution completed" >> test-report.md
            echo "" >> test-report.md
          fi
          
          echo "## Coverage Reports" >> test-report.md
          echo "" >> test-report.md
          echo "Coverage reports are available in the artifacts section." >> test-report.md
          
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: e2e-test-report
          path: test-report.md
          retention-days: 30